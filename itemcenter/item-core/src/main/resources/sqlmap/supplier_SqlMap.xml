<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="supplier">

    <typeAlias alias="SupplierDO" type="com.mockuai.itemcenter.core.domain.SupplierDO"/>
    <typeAlias alias="SupplierQTO" type="com.mockuai.itemcenter.common.domain.qto.SupplierQTO"/>
    <resultMap class="SupplierDO" id="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Mar 21 10:20:06 CST 2016.
        -->
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="contact_name" jdbcType="VARCHAR" property="contactName"/>
        <result column="contact_phone" jdbcType="VARCHAR" property="contactPhone"/>
        <result column="level" jdbcType="VARCHAR" property="level"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="seller_id" jdbcType="BIGINT" property="sellerId"/>
        <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
        <result column="biz_code" jdbcType="VARCHAR" property="bizCode"/>
        <result column="delete_mark" jdbcType="TINYINT" property="deleteMark"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, name, contact_name, contact_phone, level, type, seller_id,
        gmt_created, gmt_modified, biz_code, delete_mark
    </sql>

    <select id="getSupplier" parameterClass="SupplierDO" resultMap="BaseResultMap">
        select
        <include refid="supplier.Base_Column_List"/>
        from supplier
        where id = #id# and seller_id = #sellerId# and biz_code = #bizCode#
    </select>

    <update id="deleteSupplier" parameterClass="SupplierDO">
        update supplier
        set delete_mark = 0,gmt_modified = now()
        where id = #id# and seller_id = #sellerId# and biz_code = #bizCode#
    </update>
    <insert id="addSupplier" parameterClass="SupplierDO">
        insert into supplier
        <dynamic prepend="(">
            <isNotNull prepend="," property="id">
                id
            </isNotNull>
            <isNotNull prepend="," property="name">
                name
            </isNotNull>
            <isNotNull prepend="," property="contactName">
                contact_name
            </isNotNull>
            <isNotNull prepend="," property="contactPhone">
                contact_phone
            </isNotNull>
            <isNotNull prepend="," property="level">
                level
            </isNotNull>
            <isNotNull prepend="," property="type">
                type
            </isNotNull>
            <isNotNull prepend="," property="sellerId">
                seller_id
            </isNotNull>
            <isNotNull prepend="," property="bizCode">
                biz_code
            </isNotNull>
            ,
            delete_mark
            ,
            gmt_created
            ,
            gmt_modified
            )
        </dynamic>
        values
        <dynamic prepend="(">
            <isNotNull prepend="," property="id">
                #id:BIGINT#
            </isNotNull>
            <isNotNull prepend="," property="name">
                #name:VARCHAR#
            </isNotNull>
            <isNotNull prepend="," property="contactName">
                #contactName:VARCHAR#
            </isNotNull>
            <isNotNull prepend="," property="contactPhone">
                #contactPhone:VARCHAR#
            </isNotNull>
            <isNotNull prepend="," property="level">
                #level:VARCHAR#
            </isNotNull>
            ,0
            ,now()
            ,now()
            )
        </dynamic>
    </insert>

    <update id="updateSupplier" parameterClass="SupplierDO">
        update supplier
        set gmt_modified = now()
        <isNotNull prepend="," property="name">
            name = #name:VARCHAR#
        </isNotNull>
        <isNotNull prepend="," property="contactName">
            contact_name = #contactName:VARCHAR#
        </isNotNull>
        <isNotNull prepend="," property="contactPhone">
            contact_phone = #contactPhone:VARCHAR#
        </isNotNull>
        <isNotNull prepend="," property="level">
            level = #level:VARCHAR#
        </isNotNull>
        <isNotNull prepend="," property="type">
            type = #type:TINYINT#
        </isNotNull>
        where id = #id:BIGINT# and seller_id = #sellerId# and biz_code = #bizCode# and delete_mark = 0
    </update>

    <sql id="queryWhere">
        where delete_mark = 0
        <isNotNull prepend="AND" property="name">
            name = #name:VARCHAR#
        </isNotNull>
        <isNotNull prepend="AND" property="contactName">
            contact_name = #contactName:VARCHAR#
        </isNotNull>
        <isNotNull prepend="AND" property="contactPhone">
            contact_phone = #contactPhone:VARCHAR#
        </isNotNull>
        <isNotNull prepend="AND" property="level">
            level = #level:VARCHAR#
        </isNotNull>
        <isNotNull prepend="AND" property="type">
            type = #type:TINYINT#
        </isNotNull>
        <isNotNull prepend="AND" property="sellerId">
            seller_id = #sellerId:BIGINT#
        </isNotNull>
        <isNotNull prepend="AND" property="bizCode">
            biz_code = #bizCode#
        </isNotNull>
        <isNotNull property="idList">
            <isNotEmpty property="idList" prepend="AND">
                id in
                <iterate property="idList" conjunction="," open="(" close=")">
                    #idList[]#
                </iterate>
            </isNotEmpty>
        </isNotNull>
    </sql>

    <select id="querySupplier" parameterClass="SupplierQTO" resultMap="BaseResultMap">
        select
        <include refid="supplier.Base_Column_List"/>
        from supplier
        <include refid="supplier.queryWhere"/>
        <isNotNull property="needPaging">
            <isEqual property="needPaging" compareValue="true">
                limit offset,count
            </isEqual>
        </isNotNull>
    </select>

    <select id="countSupplier" parameterClass="SupplierQTO" resultClass="Long">
        select
        <include refid="supplier.Base_Column_List"/>
        from supplier
        <include refid="supplier.queryWhere"/>
    </select>

</sqlMap>