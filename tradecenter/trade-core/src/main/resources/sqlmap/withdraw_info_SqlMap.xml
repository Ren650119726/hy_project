<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="withdraw_info">


	
	<resultMap id="result" class="com.mockuai.tradecenter.core.domain.WithdrawInfoDO" >
		<result property="id" column="id" jdbcType="BIGINT"/>
		<result property="sellerId" column="seller_id" jdbcType="BIGINT" />
		<result property="amount" column="amount" jdbcType="BIGINT" />
		<result property="bizCode" column="biz_code" jdbcType="VARCHAR"/>
		<result property="status" column="status" jdbcType="VARCHAR" />
		<result property="name" column="name" jdbcType="VARCHAR" />
		<result property="account" column="account" jdbcType="VARCHAR"  />
		<result property="channel" column="channel" jdbcType="VARCHAR"  />
		<result property="withdrawBatchId" column="withdraw_batch_id" jdbcType="BIGINT"  />
		<result property="deleteMark" column="delete_mark" jdbcType="TINYINT"  />
		<result property="gmtCreated" column="gmt_created" jdbcType="DATETIME"  />
		<result property="gmtModified" column="gmt_modified" jdbcType="DATETIME"  />
		
		<result property="shopId" column="shop_id" />
		<result property="refuseReason" column="refuse_reason" />
		<result property="gmtOperate" column="gmt_operate" />
		<result property="type" column="type" />
		
		<result property="operByMockuai" column="oper_by_mockuai" />
		<result property="auditStatus" column="audit_status" />
	</resultMap>
	
	
	
	
	
	<sql id="column_set">
		id,
		seller_id,
		biz_code,
		status,
		name,
		account,
		channel,
		amount,
		withdraw_batch_id,
		shop_id,
		refuse_reason,
		gmt_operate,
		type,
		delete_mark,
		gmt_created,
		gmt_modified,
		oper_by_mockuai,
		audit_status
	</sql>
	
	

	<insert id="add" parameterClass="com.mockuai.tradecenter.core.domain.WithdrawInfoDO">
		insert into withdraw_info(
		biz_code,
		seller_id,
		status,
		name,
		account,
		channel,
		withdraw_batch_id,
		amount,
		shop_id,
		refuse_reason,
		type,
		oper_by_mockuai,
		audit_status,
		delete_mark,
		gmt_created,
		gmt_modified
		)
		values(
		#bizCode#,
		#sellerId#,
		#status#,
		#name#,
		#account#,
		#channel#,
		#withdrawBatchId#,
		#amount#,
		#shopId#,
		#refuseReason#,
		#type#,
		#operByMockuai#,
		#auditStatus#,
		0,
		now(),
		now()
		)
		<selectKey resultClass="long" keyProperty="id">
			select
			LAST_INSERT_ID() as value
		</selectKey>
	</insert>

	<update id="update" parameterClass="com.mockuai.tradecenter.core.domain.WithdrawInfoDO">
		update withdraw_info 
		set 
		gmt_modified = now()
		<isNotNull property="status" prepend=",">
			status = #status#
		</isNotNull>
		<isNotNull property="withdrawBatchId" prepend=",">
			withdraw_batch_id = #withdrawBatchId#
		</isNotNull>
		<isNotNull property="gmtOperate" prepend=",">
			gmt_operate = now()
		</isNotNull>
		<isNotNull property="refuseReason" prepend=",">
			refuse_reason = #refuseReason#
		</isNotNull>
		<!-- add for audit status -->
		<isNotNull property="auditStatus" prepend=",">
			audit_status = #auditStatus#
		</isNotNull>
		where id = #id# and delete_mark=0
	</update>
	
	<select id="query" parameterClass="com.mockuai.tradecenter.common.domain.settlement.WithdrawQTO" resultMap="result">
		select
		<include refid="withdraw_info.column_set" />
		from withdraw_info
		where delete_mark=0
		<isNotNull property="sellerId" prepend=" and">
			seller_id = #sellerId#
		</isNotNull>
		<isNotNull property="bizCode" prepend=" and">
			biz_code = #bizCode#
		</isNotNull>
		<isNotNull property="status" prepend=" and">
			status = #status#
		</isNotNull>
		<isNotNull property="channel" prepend=" and">
			channel = #channel#
		</isNotNull>
		<isNotNull property="withdrawBatchId" prepend=" and">
			withdraw_batch_id = #withdrawBatchId#
		</isNotNull>
		<isNotNull property="timeStart" prepend=" and">
			<![CDATA[gmt_created >= #timeStart# ]]>
		</isNotNull>
		<isNotNull property="timeEnd" prepend=" and">
			<![CDATA[ gmt_created <= #timeEnd# ]]>
		</isNotNull>
		<isNotNull property="ids" prepend="and">
			 id in
			 <iterate open="(" close=")" conjunction="," property="ids" >   
                     #ids[]#   
                </iterate>  
		</isNotNull>
		
		<isNotNull property="shopId" prepend=" and">
			shop_id = #shopId#
		</isNotNull>
		<isNotNull property="shopIds" prepend="and">
			 shop_id in
			 <iterate open="(" close=")" conjunction="," property="shopIds" >   
                     #shopIds[]#   
                </iterate>  
		</isNotNull>
		
		<isNotNull property="operByMockuai" prepend=" and">
			<![CDATA[ oper_by_mockuai = #operByMockuai# ]]>
		</isNotNull>
		
		order by gmt_created desc 
		limit #offset#,#count#
	</select>
	
	
	<select id="getQueryCount" parameterClass="com.mockuai.tradecenter.common.domain.settlement.WithdrawQTO" resultClass="Long">
		select
		IFNULL(count(*),0)
		from withdraw_info
		where delete_mark=0
		<isNotNull property="sellerId" prepend=" and">
			seller_id = #sellerId#
		</isNotNull>
		<isNotNull property="bizCode" prepend=" and">
			biz_code = #bizCode#
		</isNotNull>
		<isNotNull property="status" prepend=" and">
			status = #status#
		</isNotNull>
		<isNotNull property="channel" prepend=" and">
			channel = #channel#
		</isNotNull>
		<isNotNull property="withdrawBatchId" prepend=" and">
			withdraw_batch_id = #withdrawBatchId#
		</isNotNull>
		<isNotNull property="shopId" prepend=" and">
			shop_id = #shopId#
		</isNotNull>
		<isNotNull property="shopIds" prepend="and">
			 shop_id in
			 <iterate open="(" close=")" conjunction="," property="shopIds" >   
                     #shopIds[]#   
                </iterate>  
		</isNotNull>
		<isNotNull property="timeStart" prepend=" and">
			<![CDATA[gmt_created >= #timeStart# ]]>
		</isNotNull>
		<isNotNull property="timeEnd" prepend=" and">
			<![CDATA[ gmt_created <= #timeEnd# ]]>
		</isNotNull>
	</select>
	
	<select id="getWithdrawInfo" parameterClass="Long" resultMap="result">
		select
		<include refid="withdraw_info.column_set" />
		from withdraw_info
		where delete_mark=0
		and id=#id#
	</select>
	
	<select id="getWithdrawSumAmount" parameterClass="com.mockuai.tradecenter.common.domain.settlement.WithdrawQTO" resultClass="Long">
		select ifnull(sum(amount),0)
		from withdraw_info
		where delete_mark=0
		<isNotNull property="sellerId" prepend=" and">
			seller_id = #sellerId#
		</isNotNull>
		<isNotNull property="bizCode" prepend=" and">
			biz_code = #bizCode#
		</isNotNull>
		<isNotNull property="status" prepend=" and">
			status = #status#
		</isNotNull>
		<isNotNull property="channel" prepend=" and">
			channel = #channel#
		</isNotNull>
		<isNotNull property="withdrawBatchId" prepend=" and">
			withdraw_batch_id = #withdrawBatchId#
		</isNotNull>
		<isNotNull property="shopId" prepend=" and">
			shop_id = #shopId#
		</isNotNull>
		<isNotNull property="shopIds" prepend="and">
			 shop_id in
			 <iterate open="(" close=")" conjunction="," property="shopIds" >   
                     #shopIds[]#   
                </iterate>  
		</isNotNull>
		<isNotNull property="timeStart" prepend=" and">
			<![CDATA[gmt_created >= #timeStart# ]]>
		</isNotNull>
		<isNotNull property="timeEnd" prepend=" and">
			<![CDATA[ gmt_created <= #timeEnd# ]]>
		</isNotNull>
	</select>
	
	
	
</sqlMap>
